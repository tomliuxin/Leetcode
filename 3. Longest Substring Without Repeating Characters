public class GetLongestSubstring
    {
	/*
	3. Longest Substring Without Repeating Characters 
	Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

	*/
        public static int LengthOfLongestSubstring(string s)
        {
            if (s==null || s.Length ==0)
            {
                return 0;

            }

            int max = 0;
            Dictionary<char, int> map = new Dictionary<char, int>();
            for (int i = 0, j=0; i < s.Length; i++)
            {
                if (map.ContainsKey(s[i]))
                {
                    j = Math.Max(j, map[s[i]] + 1);
                    map.Remove(s[i]);
                }

                map.Add(s[i], i);
                max = Math.Max(max, i - j + 1);
            }

            return max;
        }
    }