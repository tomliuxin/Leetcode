/*
1. Two Sum 
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


*/
public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        if (nums==null || nums.Length <2)
            {
                return null;
            }
            int[] arr = new int[2];
            Hashtable h = new Hashtable();
            for (int i = 0; i < nums.Length; i++)
            {
                if (h.ContainsKey(target - nums[i]))
                {
                    arr[0] = (int)h[target - nums[i]];
                    arr[1] = i;
                    return arr;
                }
                else
                {
                    if (!h.ContainsKey(nums[i]))
                    {
                        h.Add(nums[i], i);
                    }
                }
            }

            return arr;
    }
}