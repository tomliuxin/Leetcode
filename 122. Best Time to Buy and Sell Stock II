public class Solution {
    public int MaxProfit(int[] prices) {
        int max=0;
        int i=1;
        while (i<prices.Length)
        {
            int lowPeak=0;
            int highPeak=0;
            if (i==1)
            {
                while (i<prices.Length && prices[i]==prices[0])
                {
                    i++;
                }
                if (i==prices.Length)
                {
                    return 0;
                }
                if (prices[i]>prices[i-1])
                {
                    lowPeak=prices[i-1];
                    i=findHighPeak(prices,i);
                    highPeak=prices[i];
                    max=highPeak-lowPeak;
                }
            }
            
            i=findLowPeak(prices,i+1);
            lowPeak=prices[i];
            i=findHighPeak(prices,i+1);
            highPeak=prices[i];
            max+=highPeak-lowPeak;
            i++;
        }
        
        return max;
    }

    private int findHighPeak(int[] prices, int start)
    {
        while(start<prices.Length && prices[start]>=prices[start-1])
        {
            start++;

        }
        return start-1;
    }
    
    private int findLowPeak(int[] prices,int start)
    {
        while(start<prices.Length && prices[start]<=prices[start-1])
        {
            start++;

        }
        return start-1;
    }
    
}