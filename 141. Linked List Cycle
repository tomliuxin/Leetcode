/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) {
        if (head==null || head.next==null)
        {
            return false;
        }
        ListNode fast=head.next.next;
        ListNode slow=head;
        while (fast!=null && fast.next!=null)
        {
            if (fast==slow || fast.next==slow)
            {
                return true;
            }
            else
            {
                fast=fast.next.next;
                slow=slow.next;
            }
        }
        
        return false;
    }
}