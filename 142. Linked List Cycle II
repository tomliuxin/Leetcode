/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode DetectCycle(ListNode head) {
        if (head!=null)
        {
            ListNode slow=head;
            ListNode fast=head;
            while(slow!=null && fast!=null)
            {
                if (fast.next==null || fast.next.next==null)
                    return null;
                slow=slow.next;
                fast=fast.next.next;
                if (slow==fast)
                {
                        while(head!=slow)
                        {
                            head=head.next;
                            slow=slow.next;
                        }
                        return head;
                    
                }
            }
            return null;
        }
        else
            return head;
    }
}