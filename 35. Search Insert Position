public class Solution {
    public int SearchInsert(int[] nums, int target) {
        int index=0;
        if (nums!=null && nums.Length>0)
        {
            index=find(nums,0,nums.Length-1,target);
        }
        return index;
    }
    
    private int find(int[] nums,int start,int end,int target)
    {
        if (start==end || start==end-1)
        {
            if (nums[start]==target)
                return start;
            else if (nums[end]==target)
                return end;
            else
            {
                if (target>nums[start] && target<nums[end])
                    return start+1;
                else if (target<nums[start])
                    return start;
                else 
                    return end+1;
            }
        }
        else
        {
            int mid=start+(end-start)/2;
            if (nums[mid]==target)
                return mid;
            else if (nums[mid]>target)
                return find(nums,start,mid,target);
            else 
                return find(nums,mid,end,target);
        }
    }
}