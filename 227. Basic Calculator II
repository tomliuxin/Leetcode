public class Solution {
    public int Calculate(string s) {
        Stack<int> numStack=new Stack<int>();
        Stack<char> operatorStack=new Stack<char>();
        Dictionary<char,int> dict=new Dictionary<char,int>();
        dict.Add('+',1);
        dict.Add('-',2);
        dict.Add('*',3);
        dict.Add('/',3);
        if (!string.IsNullOrEmpty(s))
        {
            int num=0;
            for(int i=0;i<s.Length;i++)
            {
                if (s[i]==' ')
                    continue;
                else if (s[i]>='0' && s[i]<='9')
                    num=num*10+(s[i]-'0');
                else
                {
                    if (operatorStack.Count==0)
                    {
                        numStack.Push(num);
                        operatorStack.Push(s[i]);
                    }
                    else
                    {
                        while(operatorStack.Count>0 && dict[operatorStack.Peek()]>=dict[s[i]])
                        {
                            int num1=numStack.Pop();
                            char opr=operatorStack.Pop();
                            num=getResult(num1,num,opr);
                        }
                        numStack.Push(num);
                        operatorStack.Push(s[i]);
                    }
                    
                    num=0;
                }
            }
            
            while(operatorStack.Count>0)
            {
                int num2=numStack.Pop();
                char opr=operatorStack.Pop();
                num=getResult(num2,num,opr);
                
            }
            return num;
        }
        else
            return 0;
    }
    
    private int getResult(int num1,int num2,char opr)
    {
        switch (opr)
        {
            case '+':
            return num1+num2;
            case '-':
            return num1-num2;
            case '*':
            return num1*num2;
            default:
            return num1/num2;
        }
    }
}